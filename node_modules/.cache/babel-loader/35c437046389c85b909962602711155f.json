{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/BOWS/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/BOWS/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var key=\"25d0569851c0869a01a553ee05c7ffff\";export var getWeatherData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(city){var baseURL,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(city);baseURL=\"https://api.openweathermap.org/data/2.5/forecast?q=\"+city+\"&appid=\"+key+\"&units=imperial\";_context.prev=2;_context.next=5;return axios.get(baseURL);case 5:_yield$axios$get=_context.sent;data=_yield$axios$get.data;return _context.abrupt(\"return\",data);case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);throw _context.t0;case 13:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function getWeatherData(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/workspace/BOWS/client/src/components/Resort/data/weatherAPI.js"],"names":["axios","key","getWeatherData","city","console","log","baseURL","get","data"],"mappings":"uRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,GAAG,CAAG,kCAAZ,CACA,MAAO,IAAMC,CAAAA,cAAc,0FAAG,iBAAOC,IAAP,oJAC1BC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACMG,OAFoB,CAEV,sDAAwDH,IAAxD,CAA+D,SAA/D,CAA2EF,GAA3E,CAAiF,iBAFvE,uCAICD,CAAAA,KAAK,CAACO,GAAN,CAAUD,OAAV,CAJD,uCAIdE,IAJc,kBAIdA,IAJc,iCAKfA,IALe,mJAAH,kBAAdN,CAAAA,cAAc,4CAApB","sourcesContent":["import axios from \"axios\";\nconst key = \"25d0569851c0869a01a553ee05c7ffff\";\nexport const getWeatherData = async (city) => {\n    console.log(city);\n    const baseURL = \"https://api.openweathermap.org/data/2.5/forecast?q=\" + city + \"&appid=\" + key + \"&units=imperial\";\n    try {\n        const { data } = await axios.get(baseURL);\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}"]},"metadata":{},"sourceType":"module"}