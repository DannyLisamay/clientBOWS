{"ast":null,"code":"var _jsxFileName = \"/workspace/BOWS/client/src/components/Resort/WeatherWidget.js\";\n// Resort component \nimport React, { useEffect, useState } from 'react'; // Bootstrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Tab, Tabs } from 'react-bootstrap';\nimport { getWeatherData } from './data/weatherAPI'; // weather Data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [weatherdata, setWeatherData] = useState(null);\n\nconst getData = async () => {\n  try {\n    const data = await getWeatherData();\n    setWeatherData(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nuseEffect(() => {\n  getData();\n}, []);\n\nconst WeatherWidget = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Weather Forcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), weatherdata !== null ? /*#__PURE__*/_jsxDEV(Container, {\n      class: \"weather\",\n      children: [weatherdata.weather[0].description, /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: 'http://openweathermap.org/img/wn/' + weatherdata.weather[0].icon + '@2x.png'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), weatherdata.weather[0].description, \" \", weatherdata.main.temp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 6\n  }, this);\n};\n\n_c = WeatherWidget;\nexport default WeatherWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"sources":["/workspace/BOWS/client/src/components/Resort/WeatherWidget.js"],"names":["React","useEffect","useState","Container","Row","Col","Tab","Tabs","getWeatherData","weatherdata","setWeatherData","getData","data","error","console","log","WeatherWidget","weather","description","icon","main","temp"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,SAASC,cAAT,QAA+B,mBAA/B,C,CACA;;;AACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;;AACA,MAAMS,OAAO,GAAG,YAAY;AACxB,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMJ,cAAc,EAAjC;AACAE,IAAAA,cAAc,CAACE,IAAD,CAAd;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPD;;AAQAZ,SAAS,CAAC,MAAM;AACZU,EAAAA,OAAO;AACV,CAFQ,EAEN,EAFM,CAAT;;AAGA,MAAMK,aAAa,GAAG,MAAM;AACxB;AAAC;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAGOP,WAAW,KAAK,IAAhB,gBACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA,iBACKA,WAAW,CAACQ,OAAZ,CAAoB,CAApB,EAAuBC,WAD5B,eAEI,QAAC,GAAD;AAAA,+BACI;AAAK,UAAA,GAAG,EAAE,sCAAsCT,WAAW,CAACQ,OAAZ,CAAoB,CAApB,EAAuBE,IAA7D,GAAoE;AAA9E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKKV,WAAW,CAACQ,OAAZ,CAAoB,CAApB,EAAuBC,WAL5B,OAK0CT,WAAW,CAACW,IAAZ,CAAiBC,IAL3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,GAQI,IAXX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD;AAcH,CAfD;;KAAML,a;AAgBN,eAAeA,aAAf","sourcesContent":["// Resort component \nimport React, { useEffect, useState } from 'react'\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Tab, Tabs } from 'react-bootstrap';\nimport { getWeatherData } from './data/weatherAPI'\n// weather Data\nconst [weatherdata, setWeatherData] = useState(null);\nconst getData = async () => {\n    try {\n        const data = await getWeatherData();\n        setWeatherData(data);\n    } catch (error) {\n        console.log(error);\n    }\n}\nuseEffect(() => {\n    getData();\n}, [])\nconst WeatherWidget = () => {\n    (<div>\n        <h6>Weather Forcast</h6>\n        {\n            weatherdata !== null ? (\n                <Container class=\"weather\">\n                    {weatherdata.weather[0].description}\n                    <Row>\n                        <img src={'http://openweathermap.org/img/wn/' + weatherdata.weather[0].icon + '@2x.png'} />\n                    </Row>\n                    {weatherdata.weather[0].description} {weatherdata.main.temp}\n                </Container>\n            ) : null\n        }\n    </div>);\n}\nexport default WeatherWidget;"]},"metadata":{},"sourceType":"module"}