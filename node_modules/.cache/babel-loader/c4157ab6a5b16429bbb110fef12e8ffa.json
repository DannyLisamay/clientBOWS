{"ast":null,"code":"var _jsxFileName = \"/workspace/BOWS/client/src/pages/index.js\",\n    _s = $RefreshSig$();\n\n//SEE TESTZIPCODE.JS FOR TRIAL RUN AND THOUGHT PROCESS\nimport React, { useEffect, useState } from 'react'; //BOWS API\n\nimport { getResortsData } from '../components/Resort/data/bowsAPI'; //import Snowboarder from '../images/snowboarder.jpg'\n\nimport { Link } from \"react-router-dom\"; //variable used for user input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar userZipCode; //pre definded zipcode for testing\n\nconst moutainZip = \"03242\"; // UNQIUE API KEY DONT SHOW\n\nconst apikey = 'nC8qTyVabyAPlnldpR89nTs4OmvWmdyJmGeaHoklFH71ul1StpMre3CNxOhpCOyy'; //API used by getting apikey then having the userzipcode, and then having it compare to the second zipcode which is the mountainzipcode\n\nvar apiDistance = `https://www.zipcodeapi.com/rest/${apikey}/distance.json/${userZipCode}/${moutainZip}/mile`; // this is using the API as a function to use as the textbox by grabbing the id\n// thus having it fetch the data and then console logging for now the data \n\nconst searchzipcode = data => {\n  userZipCode = document.getElementById('searchResortInput').value;\n  apiDistance = `https://www.zipcodeapi.com/rest/${apikey}/distance.json/${userZipCode}/${moutainZip}/mile`;\n  fetch(apiDistance).then(response => response.json()).then(data => console.log(data));\n}; // bowsAPI used for resorts\n\n\nconst SearchResort = () => {\n  _s();\n\n  userZipCode = document.getElementById('searchResortInput').value;\n  const [resortData, setSetData] = useState(null);\n\n  const getData = async () => {\n    try {\n      const data = await getResortsData();\n      setSetData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  if (resortData) {\n    resortData.forEach(resort => {});\n  }\n};\n\n_s(SearchResort, \"9pysDbdXGcypomIMpUhYRilIq0Q=\");\n\n_c = SearchResort;\n\nconst Home = () => {\n  SearchResort();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboutme\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your zipcode or search up a resort you want to search for.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchResortInput\",\n          className: \"searchbar\",\n          placeholder: \"Please enter your zipcode or a Resort name\",\n          defaultValue: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/compare\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: SearchResort,\n            className: \"searchbutton\",\n            children: \"SUBMIT \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchResort\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/workspace/BOWS/client/src/pages/index.js"],"names":["React","useEffect","useState","getResortsData","Link","userZipCode","moutainZip","apikey","apiDistance","searchzipcode","data","document","getElementById","value","fetch","then","response","json","console","log","SearchResort","resortData","setSetData","getData","error","forEach","resort","Home"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,cAAT,QAA+B,mCAA/B,C,CAEA;;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;;AACA,IAAIC,WAAJ,C,CACA;;AACA,MAAMC,UAAU,GAAG,OAAnB,C,CACA;;AACA,MAAMC,MAAM,GAAG,kEAAf,C,CACA;;AACA,IAAIC,WAAW,GAAI,mCAAkCD,MAAO,kBAAiBF,WAAY,IAAGC,UAAW,OAAvG,C,CAGA;AACA;;AACA,MAAMG,aAAa,GAAIC,IAAD,IAAU;AAC5BL,EAAAA,WAAW,GAAGM,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA3D;AACAL,EAAAA,WAAW,GAAI,mCAAkCD,MAAO,kBAAiBF,WAAY,IAAGC,UAAW,OAAnG;AACAQ,EAAAA,KAAK,CAACN,WAAD,CAAL,CACKO,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUL,IAAI,IAAIQ,OAAO,CAACC,GAAR,CAAYT,IAAZ,CAFlB;AAGH,CAND,C,CASA;;;AACA,MAAMU,YAAY,GAAG,MAAM;AAAA;;AACvBf,EAAAA,WAAW,GAAGM,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,KAA3D;AACA,QAAM,CAACQ,UAAD,EAAaC,UAAb,IAA2BpB,QAAQ,CAAC,IAAD,CAAzC;;AACA,QAAMqB,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMb,IAAI,GAAG,MAAMP,cAAc,EAAjC;AACAmB,MAAAA,UAAU,CAACZ,IAAD,CAAV;AACH,KAHD,CAGE,OAAOc,KAAP,EAAc;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;AACJ,GAPD;;AAQAvB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAIF,UAAJ,EAAgB;AACZA,IAAAA,UAAU,CAACI,OAAX,CAAmBC,MAAM,IAAI,CAE5B,CAFD;AAGH;AACJ,CAnBD;;GAAMN,Y;;KAAAA,Y;;AAqBN,MAAMO,IAAI,GAAG,MAAM;AACfP,EAAAA,YAAY;AACZ,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,mBAAtB;AAA0C,UAAA,SAAS,EAAC,WAApD;AAAgE,UAAA,WAAW,EAAC,4CAA5E;AAAyH,UAAA,YAAY,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAEA,YAAjB;AAA+B,YAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CApBD;;MAAMO,I;AAsBN,eAAeA,IAAf","sourcesContent":["//SEE TESTZIPCODE.JS FOR TRIAL RUN AND THOUGHT PROCESS\r\nimport React, { useEffect, useState } from 'react'\r\n//BOWS API\r\nimport { getResortsData } from '../components/Resort/data/bowsAPI';\r\n\r\n//import Snowboarder from '../images/snowboarder.jpg'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//variable used for user input\r\nvar userZipCode;\r\n//pre definded zipcode for testing\r\nconst moutainZip = \"03242\";\r\n// UNQIUE API KEY DONT SHOW\r\nconst apikey = 'nC8qTyVabyAPlnldpR89nTs4OmvWmdyJmGeaHoklFH71ul1StpMre3CNxOhpCOyy';\r\n//API used by getting apikey then having the userzipcode, and then having it compare to the second zipcode which is the mountainzipcode\r\nvar apiDistance = `https://www.zipcodeapi.com/rest/${apikey}/distance.json/${userZipCode}/${moutainZip}/mile`;\r\n\r\n\r\n// this is using the API as a function to use as the textbox by grabbing the id\r\n// thus having it fetch the data and then console logging for now the data \r\nconst searchzipcode = (data) => {\r\n    userZipCode = document.getElementById('searchResortInput').value;\r\n    apiDistance = `https://www.zipcodeapi.com/rest/${apikey}/distance.json/${userZipCode}/${moutainZip}/mile`;\r\n    fetch(apiDistance)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data));\r\n};\r\n\r\n\r\n// bowsAPI used for resorts\r\nconst SearchResort = () => {\r\n    userZipCode = document.getElementById('searchResortInput').value;\r\n    const [resortData, setSetData] = useState(null);\r\n    const getData = async () => {\r\n        try {\r\n            const data = await getResortsData();\r\n            setSetData(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [])\r\n    if (resortData) {\r\n        resortData.forEach(resort => {\r\n\r\n        });\r\n    }\r\n}\r\n\r\nconst Home = () => {\r\n    SearchResort();\r\n    return (\r\n        <div>\r\n            <div className=\"aboutme\">\r\n                <p>\r\n                    Please enter your zipcode or search up a resort you want to search for.\r\n            </p>\r\n            </div>\r\n            <div className=\"background\">\r\n                <div className=\"searchbar\">\r\n                    <input type=\"text\" id=\"searchResortInput\" className=\"searchbar\" placeholder=\"Please enter your zipcode or a Resort name\" defaultValue=\" \"></input>\r\n\r\n                    <Link to=\"/compare\">\r\n                        <button onClick={SearchResort} className=\"searchbutton\">SUBMIT </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}