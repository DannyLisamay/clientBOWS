{"ast":null,"code":"var _jsxFileName = \"/workspace/BOWS/client/src/components/Resort/WeatherWidget.js\",\n    _s = $RefreshSig$();\n\n// Resort component \nimport React, { useEffect, useState } from 'react'; // Bootstrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Tab, Tabs } from 'react-bootstrap';\nimport { getWeatherData } from './data/weatherAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherWidget = () => {\n  _s();\n\n  // weather Data\n  const [weatherdata, setWeatherData] = useState(null);\n\n  const getData = async () => {\n    try {\n      const data = await getWeatherData();\n      setWeatherData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Weather Forcast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), weatherdata !== null ? /*#__PURE__*/_jsxDEV(Container, {\n      class: \"weather\",\n      children: [weatherdata.weather[0].description, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: 'http://openweathermap.org/img/wn/' + weatherdata.weather[0].icon + '@2x.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), weatherdata.weather[0].description, \" \", weatherdata.main.temp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n\n_s(WeatherWidget, \"nN8EjEmZxM1chlwoAICPI91pyJA=\");\n\n_c = WeatherWidget;\nexport default WeatherWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"sources":["/workspace/BOWS/client/src/components/Resort/WeatherWidget.js"],"names":["React","useEffect","useState","Container","Row","Col","Tab","Tabs","getWeatherData","WeatherWidget","weatherdata","setWeatherData","getData","data","error","console","log","weather","description","icon","main","temp"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,QAA+C,iBAA/C;AACA,SAASC,cAAT,QAA+B,mBAA/B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;;AACA,QAAMU,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAML,cAAc,EAAjC;AACAG,MAAAA,cAAc,CAACE,IAAD,CAAd;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPD;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,EAGAF,WAAW,KAAK,IAAhB,gBACI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA,iBAEKA,WAAW,CAACO,OAAZ,CAAoB,CAApB,EAAuBC,WAF5B,eAII;AAAK,QAAA,GAAG,EAAE,sCAAsCR,WAAW,CAACO,OAAZ,CAAoB,CAApB,EAAuBE,IAA7D,GAAoE;AAA9E;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMKT,WAAW,CAACO,OAAZ,CAAoB,CAApB,EAAuBC,WAN5B,OAM0CR,WAAW,CAACU,IAAZ,CAAiBC,IAN3D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,GAYI,IAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAkBH,CAjCD;;GAAMZ,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["// Resort component \nimport React, { useEffect, useState } from 'react'\n// Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Tab, Tabs } from 'react-bootstrap';\nimport { getWeatherData } from './data/weatherAPI'\n\nconst WeatherWidget = () => {\n    // weather Data\n    const [weatherdata, setWeatherData] = useState(null);\n    const getData = async () => {\n        try {\n            const data = await getWeatherData();\n            setWeatherData(data);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        getData();\n    }, [])\n\n    return (<div>\n        <h6>Weather Forcast</h6>\n        {\n            weatherdata !== null ? (\n                <Container class=\"weather\">\n\n                    {weatherdata.weather[0].description}\n\n                    <img src={'http://openweathermap.org/img/wn/' + weatherdata.weather[0].icon + '@2x.png'} />\n\n                    {weatherdata.weather[0].description} {weatherdata.main.temp}\n\n\n\n                </Container>\n            ) : null\n        }\n    </div>);\n}\nexport default WeatherWidget;"]},"metadata":{},"sourceType":"module"}